apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-produtos
  namespace: entrega
  labels:
    app: api-produtos
    # cria grupo na topologia
    app.kubernetes.io/part-of: produtos
  annotations:
    # cria conex√£o na topologia
    app.openshift.io/connects-to: '[{"apiVersion":"v1","kind":"Pod","name":"banco-dados"}]'
spec:
  selector:
    matchLabels:
      app: api-produtos
  template:
    metadata:
      labels:
        app: api-produtos
    spec:
      containers:
        - image: quay.io/wesleyegberto/fiap-api-produtos:1
          name: api-produtos
          env:
            - name: MYSQL_HOST
              value: banco-dados.entrega.svc.cluster.local
            - name: MYSQL_USERNAME
              valueFrom:
                secretKeyRef:
                  name: banco-dados-acessos
                  key: mysql.user
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: banco-dados-acessos
                  key: mysql.password
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: banco-dados-acessos
                  key: mysql.database
          resources:
            limits:
              cpu: 0.5
          ports:
          - containerPort: 8080
            name: http
          readinessProbe:
            httpGet:
              path: /health/check
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 10
          livenessProbe:
            httpGet:
              path: /health/check
              port: http
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 10